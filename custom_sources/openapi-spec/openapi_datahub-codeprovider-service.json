{
    "openapi": "3.0.1",
    "info": {
        "title": "Datahub Codeprovider API",
        "description": "Codes, Replicated SAP CO (Custom Objects) data, GSDA, ConsumerViews",
        "contact": {
            "name": "Valletta",
            "url": "https://confluence.bit.admin.ch/x/cBCxB",
            "email": "devopsvalletta@ezv.admin.ch"
        }
    },
    "externalDocs": {
        "url": "https://confluence.bit.admin.ch/x/WwWEC"
    },
    "servers": [
        {
            "url": "https://ref-datahub-internal.bazg.admin.ch/datahub-codeprovider",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "OIDC": [
                
            ]
        }
    ],
    "tags": [
        {
            "name": "DataHub Codelisten Consumer View API",
            "description": "Nationale Codelisten im Warenverkehr.",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/hGG0F"
            }
        },
        {
            "name": "Datahub ConsumerViews Meta-Information API",
            "description": "Returns insight into consumer view configuration and refresh state",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/o0DFEg"
            }
        },
        {
            "name": "Datahub Tariffs API",
            "description": "Verschiedene Endpunkte zum Arbeiten mit Tarifnummern",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/56R8Eg"
            }
        },
        {
            "name": "Datahub Countries API",
            "description": "Informationen zu Zolltarifdaten: L\u00e4nder und L\u00e4ndergruppenzuweisungen abholen.",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/GjmFG"
            }
        },
        {
            "name": "Datahub Customs Offices API",
            "description": "Alles was nationale Dienststellen betrifft",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/PwQaEw"
            }
        },
        {
            "name": "Datahub CO Sync API",
            "description": "Synchronisation von Custom Objects Listen aus SAP",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/mQ7IDQ"
            }
        },
        {
            "name": "DataHub approved places Consumer View API",
            "description": "Informationen zum zugelassenen Ort (ZO) abholen.",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/0zp4FQ"
            }
        },
        {
            "name": "Datahub Codeprovider API",
            "description": "Search Codes (masterdata) like countries containing a generic structure of the id of the code, the domain / group, translations for de,fr,it,en and a temporal valid range."
        },
        {
            "name": "Datahub Vats API",
            "description": "Alles was Mehrwertsteuer betrifft",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/Q6l8Eg"
            }
        },
        {
            "name": "Actuator",
            "description": "Monitor and interact",
            "externalDocs": {
                "description": "Spring Boot Actuator Web API Documentation",
                "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
            }
        },
        {
            "name": "Datahub CO Search API",
            "description": "Suche von Custom Objects Listen aus SAP",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/mQ7IDQ"
            }
        },
        {
            "name": "LSVA API",
            "description": "Everything that concerns national services",
            "externalDocs": {
                "url": "https://confluence.bit.admin.ch/x/PwQaEw"
            }
        }
    ],
    "paths": {
        "/api/customobjects/replications": {
            "put": {
                "tags": [
                    "custom-objects-replication-controller"
                ],
                "summary": "Receives the sync status of a replication",
                "operationId": "updateStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomObjectsReplicationStatusDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomObjectsReplicationStatusDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/list/{listName}/log": {
            "get": {
                "tags": [
                    "custom-objects-log-controller"
                ],
                "operationId": "getLog_1",
                "parameters": [
                    {
                        "name": "listName",
                        "in": "path",
                        "description": "Custom Object(s) List/Table Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ZDA_TARF_NDS"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomObjectsLogDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "custom-objects-log-controller"
                ],
                "operationId": "updateLog",
                "parameters": [
                    {
                        "name": "listName",
                        "in": "path",
                        "description": "Custom Object(s) List/Table Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ZDA_TARF_NDS"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomObjectsLogDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/consumer-views-status/{consumerViewName}/{replicationId}/force-refresh": {
            "put": {
                "tags": [
                    "Datahub ConsumerViews Meta-Information API"
                ],
                "summary": "Force a refresh of the given consumer view with the current data. Not used in production. DevOps only.",
                "operationId": "forceRefresh",
                "parameters": [
                    {
                        "name": "consumerViewName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/tariffs/masterdata": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Provide customs tariff master data to the partner",
                "operationId": "getTariffMasterData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Providing filtered tariff master data by tariff number for the partner",
                "operationId": "getFilteredTariffMasterData",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommodityCode"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/v2/sync": {
            "post": {
                "tags": [
                    "Datahub CO Sync API"
                ],
                "summary": "Sync paginated custom objects lists (GZIP compressed payload)",
                "operationId": "syncCustomObjectsListPaginatedWithCompressedPayload",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomObjectsSyncGZipDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/customobjects/sync": {
            "post": {
                "tags": [
                    "Datahub CO Sync API"
                ],
                "summary": "Sync paginated custom objects lists. Note: List name is supplied as object key, but only one list can be synced at once.",
                "operationId": "syncCustomObjectsListPaginated",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomObjectsSyncDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/customobjects/devops/fakeevents/publishCustomObjectsTableUpdatedEvent/{replicationId}/{listName}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "operationId": "publishCustomObjectsTableUpdatedEvent",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/customobjects/devops/fakeevents/publishCustomObjectsRefreshedEvent/{replicationId}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "operationId": "publishCustomObjectsRefreshedEvent",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/customobjects/devops/fakeevents/publishCustomObjectsListReceivedEvent/{replicationId}/{listName}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "operationId": "publishCustomObjectsListReceivedEvent",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/customobjects/devops/fakeevents/publishCustomObjectsListPageReceivedEvent/{replicationId}/{listName}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "description": "Use this with a non-existant replication id to trigger an event processing error!",
                "operationId": "publishCustomObjectsListPageReceivedEvent",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "listName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/customobjects/devops/fakeevents/publishConsumerViewRefreshedEvent/{consumerViewName}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "operationId": "publishConsumerViewRefreshedEvent",
                "parameters": [
                    {
                        "name": "consumerViewName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/customobjects/devops/fakeevents/publishConsumerViewDependenciesUpdatedEvent/{replicationId}/{consumerViewName}": {
            "post": {
                "tags": [
                    "custom-objects-devops-controller"
                ],
                "operationId": "publishConsumerViewDependenciesUpdatedEvent",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consumerViewName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/api/approved-places": {
            "get": {
                "tags": [
                    "DataHub approved places Consumer View API"
                ],
                "summary": "Find all approved places. Result is in unspecified order.",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/pages/viewpage.action?pageId=360200915"
                },
                "operationId": "getAllApprovedPlaces",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApprovedPlaceDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DataHub approved places Consumer View API"
                ],
                "summary": "Best-effort attempt to find the approved places by their ids. Result is in unspecified order and may have fewer entries. ",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/pages/viewpage.action?pageId=360200915"
                },
                "operationId": "getApprovedPlaces",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "description": "List of approved place ids (Zugelassener Ort ID, zotId)",
                                "example": [
                                    "ZO1000000001",
                                    "ZO1000000002"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApprovedPlaceDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/togglz/{name}": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'togglz-name'",
                "operationId": "togglz-name",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'togglz-name'",
                "operationId": "togglz-name_2",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vats/{vatCode}": {
            "get": {
                "tags": [
                    "Datahub Vats API"
                ],
                "summary": "Aufl\u00f6sung eines Mehrwertsteuercode auf einen Mehrtwertsteueransatz",
                "operationId": "searchVats",
                "parameters": [
                    {
                        "name": "vatCode",
                        "in": "path",
                        "description": "Mehrwertsteuercode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VatDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/{tnr}": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Beschreibung eines Tarifs",
                "operationId": "getTarif",
                "parameters": [
                    {
                        "name": "tnr",
                        "in": "path",
                        "description": "Tarifnummer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TariffsSelftextDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/{tnr}/purposes": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Resolution of purposes for tariffs",
                "operationId": "searchPurposesByTnr",
                "parameters": [
                    {
                        "name": "tnr",
                        "in": "path",
                        "description": "Tarifnummer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zar",
                        "in": "query",
                        "description": "Zollbeg\u00fcnstigungs Artencode",
                        "required": false,
                        "schema": {
                            "maxLength": 1,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TariffsPurposesDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/{tnr}/children": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Beschreibung der direkten untergeordneten Tarife eines Tarifs",
                "operationId": "getChildrenOfTarif",
                "parameters": [
                    {
                        "name": "tnr",
                        "in": "path",
                        "description": "Tarifnummer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TariffsSelftextDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/{tn8Num}/control-codes": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Validierung bei der Erfassung von Tarifnummern und Steuerungselemente. Liefert ein Array von Steuerungs-Codes zu einer TN8",
                "operationId": "searchControlCodes",
                "parameters": [
                    {
                        "name": "tn8Num",
                        "in": "path",
                        "description": "Tarifnummer (9-stellig)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tn8Vkr",
                        "in": "query",
                        "description": "Verkehrsrichtung ('I' oder 'E')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TariffsControlCodesDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/purposes": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Resolution of all purposes for tariffs",
                "operationId": "searchPurposes",
                "parameters": [
                    {
                        "name": "zar",
                        "in": "query",
                        "description": "Zollbeg\u00fcnstigungs Artencode",
                        "required": false,
                        "schema": {
                            "maxLength": 1,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TariffsPurposesDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/masterdata/schema": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Provide customs tariff master data XML schema to the partner",
                "operationId": "getTariffMasterDataSchema",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/chapters": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Liste aller bewilligten Kapitel und deren Beschreibung",
                "operationId": "getChaptersSelftexts",
                "parameters": [
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TariffsSelftextDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/chapters/{tnr}": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Beschreibung eines Kapitels",
                "operationId": "searchChapterSelftexts",
                "parameters": [
                    {
                        "name": "tnr",
                        "in": "path",
                        "description": "Tarifnummer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TariffsSelftextDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tariffs/chapters/{tnr}/children": {
            "get": {
                "tags": [
                    "Datahub Tariffs API"
                ],
                "summary": "Beschreibung aller untergeordneten Tarife (TN4) eines Kapitels",
                "operationId": "getChildrenOfChapter",
                "parameters": [
                    {
                        "name": "tnr",
                        "in": "path",
                        "description": "Tarifnummer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TariffsSelftextDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lsva/vnedistances": {
            "get": {
                "tags": [
                    "LSVA API"
                ],
                "summary": "Highly available provision of the value for kilometers driven for discretionary assessment.",
                "operationId": "getAllVneDistances",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LsvaVneDistancesDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lsva/tariffs": {
            "get": {
                "tags": [
                    "LSVA API"
                ],
                "summary": "Query of the truck heavy traffic tax",
                "operationId": "getLsvaTar",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LsvaTariffsDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lsva/tarifforders": {
            "get": {
                "tags": [
                    "LSVA API"
                ],
                "summary": "List of Tariff Orders",
                "operationId": "getTariffOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LsvaTariffOrderDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lsva/nationallimits": {
            "get": {
                "tags": [
                    "LSVA API"
                ],
                "summary": "Information on the national weight limit in the domain Heavy-Vehicle-Submission LSVA",
                "operationId": "getLsvaNal",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LsvaNationallimitsDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lsva/euroclasses": {
            "get": {
                "tags": [
                    "LSVA API"
                ],
                "summary": "Tax rates in the domain Heavy Vehicle Fee HVF depending on the emission levels (Euro classes).",
                "operationId": "getAllLsvaEuk",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LsvaEuroclassesDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gsda/replications/{replicationId}/status": {
            "get": {
                "tags": [
                    "gsda-replication-controller"
                ],
                "summary": "Checks the replication sync status",
                "operationId": "status",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/GsdaReplicationStatusDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gsda/replications/latest/status": {
            "get": {
                "tags": [
                    "gsda-replication-controller"
                ],
                "summary": "Checks the replication sync status for the latest received replication",
                "operationId": "statusLatest",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/GsdaReplicationStatusDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gsda/list/{gsdaListName}": {
            "get": {
                "tags": [
                    "gsda-list-controller"
                ],
                "operationId": "getList",
                "parameters": [
                    {
                        "name": "gsdaListName",
                        "in": "path",
                        "description": "GSD/GSDA List Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ANSATZ"
                    },
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable (no valid replication at the moment)",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    }
                }
            }
        },
        "/api/gsda/list/{gsdaListName}/log": {
            "get": {
                "tags": [
                    "gsda-log-controller"
                ],
                "operationId": "getLog",
                "parameters": [
                    {
                        "name": "gsdaListName",
                        "in": "path",
                        "description": "GSD/GSDA List Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ANSATZ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GsdaLogDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gsda/list/listnames": {
            "get": {
                "tags": [
                    "gsda-list-controller"
                ],
                "summary": "List all available GSDA list names",
                "operationId": "getGsdaListNames",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customs-offices": {
            "get": {
                "tags": [
                    "Datahub Customs Offices API"
                ],
                "summary": "Abfrage aller nationalen Dienststellen",
                "operationId": "getCustomsOffices",
                "parameters": [
                    {
                        "name": "ndkCode",
                        "in": "query",
                        "description": "Kompetenz der Zollstelle (ACT, PER)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ACT",
                                    "PER"
                                ]
                            }
                        }
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum der Dienststelle. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomsOfficeDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects": {
            "get": {
                "tags": [
                    "Datahub CO Search API"
                ],
                "summary": "Search multiple custom object lists",
                "operationId": "searchMultipleCustomObjectList",
                "parameters": [
                    {
                        "name": "listNames",
                        "in": "query",
                        "description": "Custom Objects List/Table Names",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": [
                            "ZDA_TARF_NDS",
                            "ZDA_TARF_MWS"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable (no valid replication at the moment)",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/{listName}": {
            "get": {
                "tags": [
                    "Datahub CO Search API"
                ],
                "summary": "Search custom objects list",
                "operationId": "searchCustomObjectList",
                "parameters": [
                    {
                        "name": "listName",
                        "in": "path",
                        "description": "Custom Object(s) List/Table Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ZDA_TARF_NDS"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 5000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable (no valid replication at the moment)",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/{listName}/filter": {
            "get": {
                "tags": [
                    "Datahub CO Search API"
                ],
                "summary": "filter custom objects list",
                "operationId": "filterCustomObjectList",
                "parameters": [
                    {
                        "name": "listName",
                        "in": "path",
                        "description": "Custom Object(s) List/Table Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ZDA_TARF_NDS"
                    },
                    {
                        "name": "attributeName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeValue",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable (no valid replication at the moment)",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/replications/{replicationId}/status": {
            "get": {
                "tags": [
                    "custom-objects-replication-controller"
                ],
                "summary": "Checks the replication sync status",
                "operationId": "status_1",
                "parameters": [
                    {
                        "name": "replicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomObjectsReplicationStatusDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/replications/latest/status": {
            "get": {
                "tags": [
                    "custom-objects-replication-controller"
                ],
                "summary": "Checks the replication sync status for the latest replication",
                "operationId": "statusLatest_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomObjectsReplicationStatusDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customobjects/listnames": {
            "get": {
                "tags": [
                    "Datahub CO Search API"
                ],
                "summary": "List all available Custom Objects list names",
                "operationId": "getCustomObjectsListNames",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/countries/with-group-assignments": {
            "get": {
                "tags": [
                    "Datahub Countries API"
                ],
                "summary": "Countries with Group Assignments.",
                "operationId": "getCountriesWithGroupAssignments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountriesWithGroupAssignmentsDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/countries/masterdata": {
            "get": {
                "tags": [
                    "Datahub Countries API"
                ],
                "summary": "Auflistung von L\u00e4ndern & L\u00e4ndergruppen in einem XML",
                "operationId": "getCountriesMasterData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/countries/masterdata/schema": {
            "get": {
                "tags": [
                    "Datahub Countries API"
                ],
                "summary": "XSD Schema: Auflistung von L\u00e4ndern & L\u00e4ndergruppen in einem XML",
                "operationId": "getCountriesMasterDataSchema",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/countries/groups": {
            "get": {
                "tags": [
                    "Datahub Countries API"
                ],
                "summary": "Auflistung von L\u00e4ndergruppen",
                "operationId": "getCountryGroups",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountryGroupDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consumer-views-status": {
            "get": {
                "tags": [
                    "Datahub ConsumerViews Meta-Information API"
                ],
                "summary": "Retrieve refresh status of all consumer views",
                "operationId": "listAllAvailable",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConsumerViewRefreshInformationDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consumer-views-status/{consumerViewName}": {
            "get": {
                "tags": [
                    "Datahub ConsumerViews Meta-Information API"
                ],
                "summary": "Retrieve refresh status of a consumer view",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "consumerViewName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsumerViewRefreshInformationDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consumer-views-status/{consumerViewName}/custom-object-table-updates": {
            "get": {
                "tags": [
                    "Datahub ConsumerViews Meta-Information API"
                ],
                "summary": "Retrieve a list of the updates of the custom objects tables the consumer view depends on",
                "operationId": "listTableUpdates",
                "parameters": [
                    {
                        "name": "consumerViewName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomObjectTableUpdateInformationDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/{domain}/id": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a code code list for a given domain id",
                "operationId": "getCodesById",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/{domain}/enum": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a code code list for a given domain enum",
                "operationId": "getCodesByEnum",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "code domain typed",
                            "enum": [
                                "PHONE_AREA_CODE",
                                "COUNTRY",
                                "CORRESPONDENCE_LANGUAGE",
                                "SALUTATIONS",
                                "LEGAL_FORM",
                                "ZIPCODE_CANTON"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/zipcantoncodes": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get all CodeDtos with ZipCodes and the appropriating Cantons",
                "operationId": "getZipCantonCode",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/zipcantoncode/{zipCode}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a CodeDto with the ZipCode and the appropriating Canton",
                "operationId": "getZipCantonCodeForZipCode",
                "parameters": [
                    {
                        "name": "zipCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/legalformcodes": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get all CodeDtos with legalFormCodes and the appropriating legal forms",
                "operationId": "getLegalFormCodes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LegalFormCodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/legalformcodes/bur/{burCode}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a CodeDto with the burCode and the appropriating legal form",
                "operationId": "getLegalFormCodeByBurCode",
                "parameters": [
                    {
                        "name": "burCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LegalFormCodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/legalformcode/{legalFormCode}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a CodeDto with the legalFormCode and the appropriating legal form",
                "operationId": "getLegalFormCodeForLegalFormCode",
                "parameters": [
                    {
                        "name": "legalFormCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LegalFormCodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/domains": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a list of all code domains",
                "operationId": "getCodeDomains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDomainDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/domains/{domain}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a code domains for a given domain id",
                "operationId": "getCodeDomain",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeDomainDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/countries": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a list of countries with iso2code as country id",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/countries/{iso2Code}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a country for a given country iso2code",
                "operationId": "getCountry",
                "parameters": [
                    {
                        "name": "iso2Code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/countries/phones/areacodes": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a list of phone area codes for countries",
                "description": "id is the iso2code of the country",
                "operationId": "getCountryPhoneAreaCodes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/countries/phones/areacodes/{iso2Code}": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a phone area codes for a given country iso2code",
                "description": "id is the iso2code of the country",
                "operationId": "getCountryPhoneAreaCode",
                "parameters": [
                    {
                        "name": "iso2Code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codes/correspondence/languages": {
            "get": {
                "tags": [
                    "Datahub Codeprovider API"
                ],
                "summary": "get a list of correspondence languages",
                "operationId": "getCorrespondenceLanguages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codelists": {
            "get": {
                "tags": [
                    "DataHub Codelisten Consumer View API"
                ],
                "summary": "Aufl\u00f6sung Codeliste nach Pr\u00e4fix Filter",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/x/YweRFQ"
                },
                "operationId": "searchCodelists",
                "parameters": [
                    {
                        "name": "codelistPrefixFilter",
                        "in": "query",
                        "description": "Codeliste Prefix, see https://confluence.bit.admin.ch/x/YweRFQ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "NCL"
                        },
                        "example": "NCL"
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found code lists that matches the prefix filter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodelistFullDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No code lists matches the prefix filter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodelistFullDto"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codelists/{codelistName}": {
            "get": {
                "tags": [
                    "DataHub Codelisten Consumer View API"
                ],
                "summary": "Aufl\u00f6sung Codeliste nach Name",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/x/m06lF"
                },
                "operationId": "searchCodelist",
                "parameters": [
                    {
                        "name": "codelistName",
                        "in": "path",
                        "description": "Codeliste Name, see https://confluence.bit.admin.ch/x/m06lF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "NCL1040"
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found code list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CodelistDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "No code lists matches the provided name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codelists/{codelistName}/items/{code}": {
            "get": {
                "tags": [
                    "DataHub Codelisten Consumer View API"
                ],
                "summary": "Aufl\u00f6sung nach einzelnen Code in Codeliste",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/x/YweRFQ"
                },
                "operationId": "searchCodeInCodelist",
                "parameters": [
                    {
                        "name": "codelistName",
                        "in": "path",
                        "description": "Codeliste Name, see https://confluence.bit.admin.ch/x/m06lF",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "NCL1040"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Code to be searched in the list",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 50
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Standard: Today. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found code of code list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodelistDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No code found in provided code list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CodelistDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "No code lists matches the provided name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codelists/passar": {
            "get": {
                "tags": [
                    "DataHub Codelisten Consumer View API"
                ],
                "summary": "Provide customs tariff master data to the partner",
                "operationId": "getPassarCodelists",
                "parameters": [
                    {
                        "name": "codelistPrefixFilter",
                        "in": "query",
                        "description": "Codeliste Prefix, see https://confluence.bit.admin.ch/x/YweRFQ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "NCL"
                        },
                        "example": "NCL"
                    },
                    {
                        "name": "effectiveDate",
                        "in": "query",
                        "description": "Stichdatum. Standard: Heutiges Datum. Format: yyyy-MM-dd",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            },
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamingResponseBody"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/codelists/passar/schema": {
            "get": {
                "tags": [
                    "DataHub Codelisten Consumer View API"
                ],
                "summary": "Provide Passar code lists XML schema to the partner",
                "operationId": "getPassarCodelistsSchema",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter name or field in sort",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is missing for this request"
                    },
                    "404": {
                        "description": "Entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient authorization, see application role of the endpoint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator root web endpoint",
                "operationId": "links",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/togglz": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'togglz'",
                "operationId": "togglz",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/prometheus": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'prometheus'",
                "operationId": "prometheus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain;version=0.0.4;charset=utf-8": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/openmetrics-text;version=1.0.0;charset=utf-8": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/info": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'info'",
                "operationId": "info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/health": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'health'",
                "operationId": "health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/health/**": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'health-path'",
                "operationId": "health-path",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actuator/flyway": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'flyway'",
                "operationId": "flyway",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CustomObjectsReplicationStatusDto": {
                "type": "object",
                "properties": {
                    "listsInReplication": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "replicationId": {
                        "type": "string"
                    },
                    "logsForReplication": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "IN_PROGRESS",
                            "SYNC_COMPLETED",
                            "COMPLETED",
                            "FAILED"
                        ]
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "REST",
                            "XDBC"
                        ]
                    }
                }
            },
            "CustomObjectsLogDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "SUCCESS",
                            "FAILURE",
                            "FAILED",
                            "FAIL"
                        ]
                    },
                    "startOfReplication": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endOfReplication": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "replicationId": {
                        "type": "string"
                    },
                    "totalNumberOfLines": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalNumberOfBlocks": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ErrorDetails": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "100 CONTINUE",
                            "101 SWITCHING_PROTOCOLS",
                            "102 PROCESSING",
                            "103 EARLY_HINTS",
                            "103 CHECKPOINT",
                            "200 OK",
                            "201 CREATED",
                            "202 ACCEPTED",
                            "203 NON_AUTHORITATIVE_INFORMATION",
                            "204 NO_CONTENT",
                            "205 RESET_CONTENT",
                            "206 PARTIAL_CONTENT",
                            "207 MULTI_STATUS",
                            "208 ALREADY_REPORTED",
                            "226 IM_USED",
                            "300 MULTIPLE_CHOICES",
                            "301 MOVED_PERMANENTLY",
                            "302 FOUND",
                            "302 MOVED_TEMPORARILY",
                            "303 SEE_OTHER",
                            "304 NOT_MODIFIED",
                            "305 USE_PROXY",
                            "307 TEMPORARY_REDIRECT",
                            "308 PERMANENT_REDIRECT",
                            "400 BAD_REQUEST",
                            "401 UNAUTHORIZED",
                            "402 PAYMENT_REQUIRED",
                            "403 FORBIDDEN",
                            "404 NOT_FOUND",
                            "405 METHOD_NOT_ALLOWED",
                            "406 NOT_ACCEPTABLE",
                            "407 PROXY_AUTHENTICATION_REQUIRED",
                            "408 REQUEST_TIMEOUT",
                            "409 CONFLICT",
                            "410 GONE",
                            "411 LENGTH_REQUIRED",
                            "412 PRECONDITION_FAILED",
                            "413 PAYLOAD_TOO_LARGE",
                            "413 REQUEST_ENTITY_TOO_LARGE",
                            "414 URI_TOO_LONG",
                            "414 REQUEST_URI_TOO_LONG",
                            "415 UNSUPPORTED_MEDIA_TYPE",
                            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                            "417 EXPECTATION_FAILED",
                            "418 I_AM_A_TEAPOT",
                            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                            "420 METHOD_FAILURE",
                            "421 DESTINATION_LOCKED",
                            "422 UNPROCESSABLE_ENTITY",
                            "423 LOCKED",
                            "424 FAILED_DEPENDENCY",
                            "425 TOO_EARLY",
                            "426 UPGRADE_REQUIRED",
                            "428 PRECONDITION_REQUIRED",
                            "429 TOO_MANY_REQUESTS",
                            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                            "500 INTERNAL_SERVER_ERROR",
                            "501 NOT_IMPLEMENTED",
                            "502 BAD_GATEWAY",
                            "503 SERVICE_UNAVAILABLE",
                            "504 GATEWAY_TIMEOUT",
                            "505 HTTP_VERSION_NOT_SUPPORTED",
                            "506 VARIANT_ALSO_NEGOTIATES",
                            "507 INSUFFICIENT_STORAGE",
                            "508 LOOP_DETECTED",
                            "509 BANDWIDTH_LIMIT_EXCEEDED",
                            "510 NOT_EXTENDED",
                            "511 NETWORK_AUTHENTICATION_REQUIRED"
                        ]
                    },
                    "error": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "correlationId": {
                        "type": "string"
                    }
                }
            },
            "CommodityCode": {
                "required": [
                    "controlCode"
                ],
                "type": "object",
                "properties": {
                    "controlCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ControlCode"
                        }
                    },
                    "value": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validForImport": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validForExport": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "ControlCode": {
                "required": [
                    "declarationRule"
                ],
                "type": "object",
                "properties": {
                    "declarationRule": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeclarationRule"
                        }
                    },
                    "processingCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProcessingCode"
                        }
                    },
                    "permit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permit"
                        }
                    },
                    "nonCustomsLaw": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NonCustomsLaw"
                        }
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "scaleWeightCode": {
                        "type": "string",
                        "format": "byte",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "storageType": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "lowerScaleWeight": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "upperScaleWeight": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validForImport": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validForExport": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "CountryGroupAssignment": {
                "type": "object",
                "properties": {
                    "grpNr": {
                        "type": "integer",
                        "format": "int32",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "type": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    }
                },
                "xml": {
                    "name": "countryGroupAssignment"
                }
            },
            "DeclarationRule": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "weightCalc": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "NonCustomsLaw": {
                "type": "object",
                "properties": {
                    "countryGroupAssignment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountryGroupAssignment"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "optional": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "grpObligation": {
                        "type": "string",
                        "format": "byte",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "Permit": {
                "type": "object",
                "properties": {
                    "countryGroupAssignment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountryGroupAssignment"
                        }
                    },
                    "permitAuthority": {
                        "type": "integer",
                        "format": "int32",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "toleranceCode": {
                        "type": "string",
                        "format": "byte",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "grpObligation": {
                        "type": "string",
                        "format": "byte",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "optional": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "ProcessingCode": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "format": "byte",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "CustomObjectsListPageMetadataDto": {
                "type": "object",
                "properties": {
                    "replicationId": {
                        "type": "string",
                        "description": "Used to explicitly identify all correlated pages of one replication of a custom objects list"
                    },
                    "blockNummer": {
                        "type": "integer",
                        "description": "the current page / block being transmitted",
                        "format": "int32",
                        "example": 1
                    },
                    "max_blockNummer": {
                        "type": "integer",
                        "description": "the total amount of pages / blocks being transmitted for this custom objects list",
                        "format": "int32",
                        "example": 1
                    },
                    "lines": {
                        "type": "integer",
                        "description": "the amount of lines in the current page / block",
                        "format": "int32"
                    },
                    "max_lines": {
                        "type": "integer",
                        "description": "the total amount of lines in this custom objects list",
                        "format": "int32"
                    },
                    "time_blockstart": {
                        "type": "string",
                        "description": "the timestamp at which the current page / block has been sent by SAP-MDG",
                        "format": "date-time"
                    },
                    "time_PO": {
                        "type": "string",
                        "description": "the timestamp at which the current page / block has been sent by the SAP PI/PO Layer",
                        "format": "date-time"
                    }
                },
                "description": "Relevant metadata of the currently synchronised page / block as well as the whole custom objects list"
            },
            "CustomObjectsSyncGZipDto": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/CustomObjectsListPageMetadataDto"
                    },
                    "customObjectList": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "a key-value param of the custom object list. The key is expected to be the list name. The value is expected to be an ABAP-GZip and Base64 encoded json array containing the data of the custom objects list"
                        },
                        "description": "a key-value param of the custom object list. The key is expected to be the list name. The value is expected to be an ABAP-GZip and Base64 encoded json array containing the data of the custom objects list"
                    }
                },
                "description": "Synchronisation wrapper for custom objects lists, containing metadata"
            },
            "ArrayNode": {
                "type": "object",
                "description": "a key-value param of the custom object list. The single key is expected to be the list name. The value is expected to be a json array containing the data of the custom objects list.",
                "example": {
                    "ZDA_TARF_LKE": [
                        
                    ]
                }
            },
            "CustomObjectsSyncDto": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/CustomObjectsListPageMetadataDto"
                    },
                    "customObjectLists": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ArrayNode"
                        },
                        "description": "a key-value param of the custom object list. The single key is expected to be the list name. The value is expected to be a json array containing the data of the custom objects list.",
                        "example": {
                            "ZDA_TARF_LKE": [
                                
                            ]
                        }
                    }
                },
                "description": "Synchronisation wrapper for custom objects lists, containing metadata"
            },
            "ApprovedPlaceDto": {
                "type": "object",
                "properties": {
                    "zotId": {
                        "type": "string",
                        "description": "Approved Place"
                    },
                    "zotCode": {
                        "type": "string",
                        "description": "Deprecated code for approved place"
                    },
                    "zotText": {
                        "type": "string",
                        "description": "Approved place text"
                    },
                    "zotVkr": {
                        "type": "string",
                        "description": "Traffic direction Export/Import"
                    },
                    "zotOperator": {
                        "type": "string",
                        "description": "Business Partner Number"
                    },
                    "zotOperatorOrigname": {
                        "type": "string",
                        "description": "Original Name from register"
                    },
                    "zotStreet": {
                        "type": "string",
                        "description": "Street"
                    },
                    "zotHsNum": {
                        "type": "string",
                        "description": "House Number"
                    },
                    "zotZip": {
                        "type": "string",
                        "description": "City postal code"
                    },
                    "zotPlace": {
                        "type": "string",
                        "description": "City"
                    },
                    "zotObsvDesk": {
                        "type": "string",
                        "description": "Observation desk (ZOT)"
                    },
                    "zotContactName": {
                        "type": "string",
                        "description": "Name 1 (surname for persons, else company name)"
                    },
                    "zotContactFname": {
                        "type": "string",
                        "description": "A person's first name (Addresses)"
                    },
                    "zotContactTel": {
                        "type": "string",
                        "description": "Contact telephone"
                    },
                    "zotContactEmail": {
                        "type": "string",
                        "description": "Contact e-mail address"
                    },
                    "zotMoBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotMoBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotMoVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotMoVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotTuBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotTuBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotTuVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotTuVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotWeBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotWeBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotWeVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotWeVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotThBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotThBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotThVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotThVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotFrBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotFrBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotFrVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotFrVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotSaBtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotSaBtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotSaVtime1": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotSaVtime2": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "zotApprNum": {
                        "type": "string",
                        "description": "Approval number"
                    },
                    "zotNdsId": {
                        "type": "string",
                        "description": "National agency number"
                    },
                    "zotNdsTxt": {
                        "type": "string",
                        "description": "National agency texts"
                    },
                    "zotStatus": {
                        "type": "string",
                        "description": "ZOT Status"
                    },
                    "changedAt": {
                        "type": "string",
                        "description": "Changed On",
                        "format": "date-time"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "Changed By"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Created On",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Created By"
                    }
                },
                "description": "approved place"
            },
            "LocalTime": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minute": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "second": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nano": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Open from time Saturday"
            },
            "VatDto": {
                "type": "object",
                "properties": {
                    "mwaAns": {
                        "type": "number",
                        "description": "Mehrwertsteueransatz in Prozent",
                        "format": "double",
                        "example": 1.2
                    },
                    "mwsCode": {
                        "type": "string",
                        "description": "Mehrwertsteuercode",
                        "example": "88"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Stichdatum",
                        "format": "date",
                        "example": "2021-05-05"
                    }
                },
                "description": "Aufl\u00f6sung eines Mehrwertsteuercode auf einen Mehrtwertsteueransatz"
            },
            "TariffsSelftextDto": {
                "type": "object",
                "properties": {
                    "tnr": {
                        "type": "string",
                        "description": "Tarifnummer"
                    },
                    "selftxt": {
                        "$ref": "#/components/schemas/TextDto"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Stichdatum",
                        "format": "date",
                        "example": "2021-05-05"
                    }
                },
                "description": "Tarif Selbsttext"
            },
            "TextDto": {
                "type": "object",
                "properties": {
                    "de": {
                        "type": "string",
                        "description": "Text in Deutsch"
                    },
                    "fr": {
                        "type": "string",
                        "description": "Text in Franz\u00f6sisch"
                    },
                    "it": {
                        "type": "string",
                        "description": "Text in Italienisch"
                    },
                    "en": {
                        "type": "string",
                        "description": "Text in Englisch"
                    }
                },
                "description": "Tarif Selbsttext"
            },
            "TariffsPurposeDto": {
                "type": "object",
                "properties": {
                    "zco": {
                        "type": "string",
                        "description": "Zollbeg\u00fcnstigungs Code"
                    },
                    "zartxt": {
                        "$ref": "#/components/schemas/TextDto"
                    },
                    "zeltxt": {
                        "$ref": "#/components/schemas/TextDto"
                    }
                },
                "description": "Verwendungsverpflichtung"
            },
            "TariffsPurposesDto": {
                "type": "object",
                "properties": {
                    "tn8Num": {
                        "type": "string",
                        "description": "TN8 Nummer"
                    },
                    "selftxt": {
                        "$ref": "#/components/schemas/TextDto"
                    },
                    "purposes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TariffsPurposeDto"
                        }
                    }
                },
                "description": "Zollerleichterung"
            },
            "TariffsControlCodesDto": {
                "type": "object",
                "properties": {
                    "tn8Num": {
                        "type": "string",
                        "description": "Tarifnummer"
                    },
                    "tn8Vkr": {
                        "type": "string",
                        "description": "Verkehrsrichtung",
                        "enum": [
                            "I",
                            "E",
                            "I+E"
                        ]
                    },
                    "stNum": {
                        "type": "array",
                        "description": "SteuerungsCodes",
                        "items": {
                            "type": "string",
                            "description": "SteuerungsCodes"
                        }
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Stichdatum",
                        "format": "date",
                        "example": "2021-05-05"
                    }
                },
                "description": "Tarifnummer mit je einer Liste von Steuerungselementen",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/x/1xQaEw"
                }
            },
            "StreamingResponseBody": {
                "type": "object"
            },
            "LsvaVneDistancesDto": {
                "type": "object",
                "properties": {
                    "vneId": {
                        "type": "string",
                        "description": "Id of the record"
                    },
                    "vneDistanceInKm": {
                        "type": "integer",
                        "description": "Vne distance in kilometers",
                        "format": "int32"
                    },
                    "vneVdat": {
                        "type": "string",
                        "description": "Validity date from",
                        "format": "date"
                    },
                    "vneBdat": {
                        "type": "string",
                        "description": "Validity date to",
                        "format": "date"
                    }
                },
                "description": "lsva_vne_distances"
            },
            "LsvaTariffsDto": {
                "type": "object",
                "properties": {
                    "tar": {
                        "type": "string"
                    },
                    "tor": {
                        "type": "string",
                        "description": "Tariff order id"
                    },
                    "tarAns": {
                        "type": "number",
                        "description": "Tariff approach",
                        "format": "double"
                    },
                    "tarVdat": {
                        "type": "string",
                        "description": "Validity date from",
                        "format": "date"
                    },
                    "tarBdat": {
                        "type": "string",
                        "description": "Validity date to",
                        "format": "date"
                    }
                }
            },
            "LsvaTariffOrderDto": {
                "type": "object",
                "properties": {
                    "tor": {
                        "type": "string",
                        "description": "Tariff Order ID"
                    },
                    "torCode": {
                        "type": "string",
                        "description": "Description (Code of the Tariff Order)"
                    },
                    "torEuk": {
                        "type": "string",
                        "description": "European classification of the Tariff Order"
                    },
                    "torBdat": {
                        "type": "string",
                        "description": "Validity date from",
                        "format": "date"
                    },
                    "torVdat": {
                        "type": "string",
                        "description": "Validity date to",
                        "format": "date"
                    }
                },
                "description": "Tariff Orders"
            },
            "LsvaNationallimitsDto": {
                "type": "object",
                "properties": {
                    "nalId": {
                        "type": "string",
                        "description": "Id of the national limit data set"
                    },
                    "nalLimit": {
                        "type": "integer",
                        "description": "National weight limits",
                        "format": "int32"
                    },
                    "nalBdat": {
                        "type": "string",
                        "description": "Validity date to",
                        "format": "date"
                    },
                    "nalVdat": {
                        "type": "string",
                        "description": "Validity date from",
                        "format": "date"
                    }
                }
            },
            "LsvaEuroclassesDto": {
                "type": "object",
                "properties": {
                    "euk": {
                        "type": "string",
                        "description": "Id of the record"
                    },
                    "eukBdat": {
                        "type": "string",
                        "description": "Validity date to",
                        "format": "date"
                    },
                    "eukVdat": {
                        "type": "string",
                        "description": "DValidity date from",
                        "format": "date"
                    },
                    "eukClass": {
                        "type": "integer",
                        "description": "Euroclass",
                        "format": "int32"
                    }
                },
                "description": "lsva_euroclasses"
            },
            "GsdaReplicationStatusDto": {
                "type": "object",
                "properties": {
                    "listsInReplication": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "replicationId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "IN_PROGRESS",
                            "SYNC_COMPLETED",
                            "COMPLETED",
                            "FAILED"
                        ]
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GsdaLogDto": {
                "type": "object",
                "properties": {
                    "listName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SUCCESS",
                            "FAILURE",
                            "FAILED",
                            "FAIL"
                        ]
                    },
                    "startOfReplication": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endOfReplication": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "replicationId": {
                        "type": "string"
                    },
                    "totalNumberOfLines": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalNumberOfBlocks": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CustomsOfficeDto": {
                "type": "object",
                "properties": {
                    "ndsNum": {
                        "type": "string",
                        "description": "Nummer der Dienststelle"
                    },
                    "ndsName": {
                        "type": "string",
                        "description": "Name der Dienststelle"
                    },
                    "ndsBez": {
                        "$ref": "#/components/schemas/TextDto"
                    },
                    "ndsLat": {
                        "type": "number",
                        "description": "L\u00e4ngengrad"
                    },
                    "ndsLon": {
                        "type": "number",
                        "description": "Breitengrad"
                    },
                    "ndsIntl": {
                        "type": "string",
                        "description": "Liste der Kompetenzen, f\u00fcr welche die nationale Dienststelle gilt"
                    },
                    "ndsVdat": {
                        "pattern": "yyyy-MM-dd",
                        "type": "string",
                        "description": "G\u00fcltig von",
                        "format": "date",
                        "example": "2021-05-05"
                    },
                    "ndsBdat": {
                        "pattern": "yyyy-MM-dd",
                        "type": "string",
                        "description": "G\u00fcltig bis",
                        "format": "date",
                        "example": "2021-05-05"
                    },
                    "lkeName": {
                        "type": "string",
                        "description": "Name der Lokalebene"
                    },
                    "ndsId": {
                        "type": "string",
                        "description": "ID der nationalen Dienststelle"
                    },
                    "lkeId": {
                        "type": "string",
                        "description": "ID der Lokalebene"
                    },
                    "ndkCode": {
                        "type": "array",
                        "description": "Liste der Kompetenzen der Dienststelle",
                        "items": {
                            "type": "string",
                            "description": "Liste der Kompetenzen der Dienststelle",
                            "enum": [
                                "ACT",
                                "PER"
                            ]
                        }
                    }
                },
                "description": "Informationen einer nationalen Dienststelle",
                "externalDocs": {
                    "url": "https://confluence.bit.admin.ch/x/rhSRFQ"
                }
            },
            "CountriesWithGroupAssignmentsDto": {
                "type": "object",
                "properties": {
                    "isoCode": {
                        "type": "string",
                        "description": "ISO Code"
                    },
                    "nameDe": {
                        "type": "string",
                        "description": "Name German"
                    },
                    "nameFr": {
                        "type": "string",
                        "description": "Name French"
                    },
                    "nameIt": {
                        "type": "string",
                        "description": "Name Italian"
                    },
                    "nameEn": {
                        "type": "string",
                        "description": "Name English"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Valid From",
                        "format": "date"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Valid To",
                        "format": "date"
                    },
                    "countryGroupAssignments": {
                        "type": "array",
                        "description": "Country group assignment List",
                        "items": {
                            "$ref": "#/components/schemas/CountryGroupAssignmentDto"
                        }
                    }
                },
                "description": "Countries with group assignments"
            },
            "CountryGroupAssignmentDto": {
                "type": "object",
                "properties": {
                    "grpNr": {
                        "type": "integer",
                        "description": "Group Number",
                        "format": "int32"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "Group Number valid from",
                        "format": "date"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "Group Number valid to",
                        "format": "date"
                    }
                },
                "description": "Countries group assignments"
            },
            "CountryGroupDto": {
                "type": "object",
                "properties": {
                    "grpNr": {
                        "type": "integer",
                        "description": "Nummer der L\u00e4ndergruppe",
                        "format": "int32"
                    },
                    "grpUser": {
                        "type": "string",
                        "description": "Benutzergruppe"
                    },
                    "nameDe": {
                        "type": "string",
                        "description": "Deutscher Name der L\u00e4ndergruppe"
                    },
                    "nameEn": {
                        "type": "string",
                        "description": "Englischer Name der L\u00e4ndergruppe"
                    },
                    "nameFr": {
                        "type": "string",
                        "description": "Franz\u00f6sischer Name der L\u00e4ndergruppe"
                    },
                    "nameIt": {
                        "type": "string",
                        "description": "Italienischer Name der L\u00e4ndergruppe"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "G\u00fcltig von",
                        "format": "date"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "G\u00fcltig bis",
                        "format": "date"
                    }
                },
                "description": "L\u00e4ndergruppe mit \u00dcbersetzungen"
            },
            "ConsumerViewRefreshInformationDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the consumer view"
                    },
                    "customObjectTables": {
                        "type": "array",
                        "description": "The custom objects tables the consumer view depends on",
                        "items": {
                            "type": "string",
                            "description": "The custom objects tables the consumer view depends on"
                        }
                    },
                    "latestRefresh": {
                        "$ref": "#/components/schemas/RefreshDto"
                    }
                },
                "description": "Holds information about the last refresh of a consumer view and custom object tables involved"
            },
            "RefreshDto": {
                "type": "object",
                "properties": {
                    "replicationId": {
                        "type": "string",
                        "description": "Replication id of the refresh"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the refresh",
                        "format": "date-time"
                    },
                    "hoursAgo": {
                        "type": "integer",
                        "description": "Time in hours since last refresh",
                        "format": "int64"
                    }
                },
                "description": "Latest refresh information"
            },
            "CustomObjectTableUpdateInformationDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the custom object table"
                    },
                    "replicationId": {
                        "type": "string",
                        "description": "The replication id"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the update",
                        "format": "date-time"
                    }
                },
                "description": "Synchronisation wrapper for custom objects lists, containing metadata"
            },
            "CodeDto": {
                "required": [
                    "domain",
                    "id",
                    "name",
                    "validFrom",
                    "validTo"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of the code (unique only in the domain)"
                    },
                    "domain": {
                        "type": "string",
                        "description": "domain / category of the code"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "a list of translations for de, fr, it, en"
                        },
                        "description": "a list of translations for de, fr, it, en"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "temporal start of the code validity",
                        "format": "date"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "temporal end of the code validity",
                        "format": "date"
                    }
                },
                "description": "code alias master data alias reference data"
            },
            "LegalFormCodeDto": {
                "required": [
                    "domain",
                    "id",
                    "name",
                    "validFrom",
                    "validTo"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of the code (unique only in the domain)"
                    },
                    "domain": {
                        "type": "string",
                        "description": "domain / category of the code"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "a list of translations for de, fr, it, en"
                        },
                        "description": "a list of translations for de, fr, it, en"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "temporal start of the code validity",
                        "format": "date"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "temporal end of the code validity",
                        "format": "date"
                    },
                    "manual": {
                        "type": "boolean",
                        "description": "Is it allowed to use legal form for a manually created businesspartner"
                    },
                    "burLegalFormCode": {
                        "type": "string",
                        "description": "Bur legal form code of object"
                    }
                },
                "description": "legal form code alias master data alias reference data"
            },
            "CodeDomainDto": {
                "required": [
                    "description",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of the domain in the format system-group (nnn-nnn)"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the code domain"
                    }
                },
                "description": "code domain alias category alias group for a list of codes"
            },
            "CodelistDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Codeliste Code",
                        "example": "10"
                    },
                    "codtxt": {
                        "$ref": "#/components/schemas/TextDto"
                    }
                },
                "description": "Codeliste"
            },
            "CodelistFullDto": {
                "type": "object",
                "properties": {
                    "codelist": {
                        "type": "string",
                        "description": "Name der Codeliste",
                        "example": "NCL1040"
                    },
                    "codelisttxt": {
                        "$ref": "#/components/schemas/TextDto"
                    },
                    "content": {
                        "type": "array",
                        "description": "Inhalt der Codeliste",
                        "items": {
                            "$ref": "#/components/schemas/CodelistDto"
                        }
                    }
                },
                "description": "Codeliste mit Details"
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "templated": {
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "prometheus": {
                "type": "http",
                "scheme": "basic"
            },
            "OIDC": {
                "type": "openIdConnect",
                "description": "OAuth2-Authentication",
                "openIdConnectUrl": "https://ref-identity-pams.bit.admin.ch/realms/ezv-datahub/.well-known/openid-configuration"
            }
        }
    }
}